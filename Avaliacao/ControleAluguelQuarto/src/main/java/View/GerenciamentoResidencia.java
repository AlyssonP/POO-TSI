package View;

import Model.Entity.Quarto;
import Model.Entity.Residencia;
import Model.Repository.QuartoRepository;
import Model.Repository.ResidenciaRepository;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author alyssonp
 */
public class GerenciamentoResidencia extends javax.swing.JFrame {
    private static ResidenciaRepository residenciaRepository = new ResidenciaRepository();
    private static QuartoRepository quartoRepository = new QuartoRepository();

    /**
     * Creates new form GerenciamentoResidencia
     */
    public GerenciamentoResidencia() {
        initComponents();
        listarResidencias();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        inputRuaResidencia = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        inputBairroResidencia = new javax.swing.JTextField();
        inputCepResidencia = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        inputEmailResidencia = new javax.swing.JTextField();
        inputTelefoneResidencia = new javax.swing.JFormattedTextField();
        btnLimparCamposResidencia = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        inputNumeroResidencia = new javax.swing.JTextField();
        btnCadastrarResidencia = new javax.swing.JButton();
        btnAtualizarResidencia = new javax.swing.JButton();
        btnExcluirResidencia = new javax.swing.JButton();
        btnDesselecionarResidencia = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        tabelaResidencias = new javax.swing.JTable();
        jPanel5 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        inputValorDiaria = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        inputCapacidadeHospedes = new javax.swing.JTextField();
        checkArCondicionado = new javax.swing.JCheckBox();
        checkBanheiraHidromassagem = new javax.swing.JCheckBox();
        btnLimpaCamposQuarto = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        tabelaQuartos = new javax.swing.JTable();
        btnCadastrarQuarto = new javax.swing.JButton();
        btnAtualizarQuarto = new javax.swing.JButton();
        btnExcluirQuarto = new javax.swing.JButton();
        btnDesselecionarQuarto = new javax.swing.JButton();
        btnFecharGerenciamento = new javax.swing.JButton();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 102, 204));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("AlugaQuarto");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jLabel6)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(9, Short.MAX_VALUE)
                .addComponent(jLabel6)
                .addContainerGap())
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel1.setText("Gerenciamento de Residencia");

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Dados de Residencia"));

        jLabel2.setText("Rua:");

        jLabel3.setText("Bairro:");

        jLabel4.setText("CEP:");

        jLabel5.setText("Telefone:");

        jLabel7.setText("Email:");

        try {
            inputTelefoneResidencia.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("(##)#####-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        btnLimparCamposResidencia.setText("Limpar Campos");
        btnLimparCamposResidencia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimparCamposResidenciaActionPerformed(evt);
            }
        });

        jLabel10.setText("NÃºmero:");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(inputRuaResidencia, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(inputBairroResidencia, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(inputCepResidencia, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(inputNumeroResidencia, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(inputTelefoneResidencia, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(inputEmailResidencia, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnLimparCamposResidencia)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(inputRuaResidencia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(inputBairroResidencia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(inputCepResidencia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10)
                    .addComponent(inputNumeroResidencia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel7)
                    .addComponent(inputEmailResidencia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(inputTelefoneResidencia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnLimparCamposResidencia))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnCadastrarResidencia.setText("Cadastrar");
        btnCadastrarResidencia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCadastrarResidenciaActionPerformed(evt);
            }
        });

        btnAtualizarResidencia.setText("Atualizar");
        btnAtualizarResidencia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtualizarResidenciaActionPerformed(evt);
            }
        });

        btnExcluirResidencia.setText("Excluir");
        btnExcluirResidencia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirResidenciaActionPerformed(evt);
            }
        });

        btnDesselecionarResidencia.setText("Desselecionar");
        btnDesselecionarResidencia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDesselecionarResidenciaActionPerformed(evt);
            }
        });

        tabelaResidencias.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "CÃ³digo", "Rua", "NÃºmero", "Bairro", "Cep", "Telefone", "Email"
            }
        ));
        tabelaResidencias.setSelectionBackground(new java.awt.Color(51, 102, 255));
        tabelaResidencias.setSelectionForeground(new java.awt.Color(255, 255, 255));
        tabelaResidencias.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelaResidenciasMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tabelaResidencias);

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Dados do Quarto"));

        jLabel8.setText("Valor de DiÃ¡ria:");

        jLabel9.setText("Capacidade de Hospedes:");

        checkArCondicionado.setText("Ar Condicinado");

        checkBanheiraHidromassagem.setText("Banheira Hidromassagem");

        btnLimpaCamposQuarto.setText("Limpar Campos");
        btnLimpaCamposQuarto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpaCamposQuartoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(inputValorDiaria, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(inputCapacidadeHospedes, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(checkArCondicionado)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(checkBanheiraHidromassagem))
                    .addComponent(btnLimpaCamposQuarto))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(inputValorDiaria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(inputCapacidadeHospedes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(checkArCondicionado)
                    .addComponent(checkBanheiraHidromassagem))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnLimpaCamposQuarto)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tabelaQuartos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "CÃ³digo do Quarto", "Valor DiÃ¡ria", "Capacidade Hospde", "Ar Condicionado", "Banheira Hidromassagem", "Disponivel"
            }
        ));
        tabelaQuartos.setSelectionBackground(new java.awt.Color(51, 102, 255));
        tabelaQuartos.setSelectionForeground(new java.awt.Color(255, 255, 255));
        tabelaQuartos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelaQuartosMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(tabelaQuartos);

        btnCadastrarQuarto.setText("Cadastrar");
        btnCadastrarQuarto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCadastrarQuartoActionPerformed(evt);
            }
        });

        btnAtualizarQuarto.setText("Atualizar");
        btnAtualizarQuarto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtualizarQuartoActionPerformed(evt);
            }
        });

        btnExcluirQuarto.setText("Excluir");
        btnExcluirQuarto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirQuartoActionPerformed(evt);
            }
        });

        btnDesselecionarQuarto.setText("Desselecionar");
        btnDesselecionarQuarto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDesselecionarQuartoActionPerformed(evt);
            }
        });

        btnFecharGerenciamento.setText("Fechar Gerenciamento");
        btnFecharGerenciamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFecharGerenciamentoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnFecharGerenciamento))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                .addComponent(btnCadastrarResidencia)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnAtualizarResidencia)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnExcluirResidencia)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnDesselecionarResidencia))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                .addComponent(btnCadastrarQuarto)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnAtualizarQuarto)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnExcluirQuarto)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnDesselecionarQuarto))
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(30, 30, 30))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCadastrarResidencia)
                    .addComponent(btnAtualizarResidencia)
                    .addComponent(btnExcluirResidencia)
                    .addComponent(btnDesselecionarResidencia))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCadastrarQuarto)
                    .addComponent(btnAtualizarQuarto)
                    .addComponent(btnExcluirQuarto)
                    .addComponent(btnDesselecionarQuarto))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnFecharGerenciamento)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnFecharGerenciamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFecharGerenciamentoActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_btnFecharGerenciamentoActionPerformed
    
    // AÃ§Ãµes para gerenciamento de residÃªcias.
    private void btnLimparCamposResidenciaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimparCamposResidenciaActionPerformed
        // TODO add your handling code here:
        limparCamporResidencia();
    }//GEN-LAST:event_btnLimparCamposResidenciaActionPerformed

    private void btnCadastrarResidenciaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCadastrarResidenciaActionPerformed
        // TODO add your handling code here:
        Residencia residencia = leituraInputsResidencia();
        if(residencia == null) {
            return;
        }
        
        if(residenciaRepository.insertResidencia(residencia)) {
            JOptionPane.showMessageDialog(null, "ResidÃªncia cadastrada com sucesso!");
            limparCamporResidencia();
            listarResidencias();
        } else {
            JOptionPane.showMessageDialog(null, "Houve um erro ao cadastrar residÃªncia. Tente novamente.");
        }
    }//GEN-LAST:event_btnCadastrarResidenciaActionPerformed

    private void btnAtualizarResidenciaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtualizarResidenciaActionPerformed
        // TODO add your handling code here:
        if(tabelaResidencias.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(null, "Selecione um linha na tabela para atualizar uma residÃªcia.");
            return;
        }
        int codigoResidencia = Integer.parseInt(tabelaResidencias.getValueAt(tabelaResidencias.getSelectedRow(), 0).toString());
        Residencia residencia = leituraInputsResidenciaUpdate(codigoResidencia);
        if(residencia == null) {
            return;
        }
        
        if(residenciaRepository.updateResidencia(residencia)) {
            JOptionPane.showMessageDialog(null, "ResidÃªncia atualizda com sucesso!");
            limparCamporResidencia();
            listarResidencias();
        } else {
            JOptionPane.showMessageDialog(null, "Houve um erro ao atualizar os dados da residÃªncia. Tente novamente.");
        }
    }//GEN-LAST:event_btnAtualizarResidenciaActionPerformed

    private void tabelaResidenciasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaResidenciasMouseClicked
        // TODO add your handling code here:
        inserirDadoCamposResidencia();
        if(tabelaResidencias.getSelectedRow() != -1) {
            int codigoResidencia = (int) tabelaResidencias.getValueAt(tabelaResidencias.getSelectedRow(), 0);
            listarQuartos(codigoResidencia);
        }
    }//GEN-LAST:event_tabelaResidenciasMouseClicked

    private void btnDesselecionarResidenciaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDesselecionarResidenciaActionPerformed
        // TODO add your handling code here:
        tabelaResidencias.clearSelection();
        limparTabelaQuartos();
        limparCamposQuarto();
    }//GEN-LAST:event_btnDesselecionarResidenciaActionPerformed

    private void btnExcluirResidenciaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirResidenciaActionPerformed
        // TODO add your handling code here:
        if(tabelaResidencias.getSelectedRow() != -1) {
            int codigoResidencia = Integer.parseInt(tabelaResidencias.getValueAt(tabelaResidencias.getSelectedRow(), 0).toString());
            int saida = JOptionPane.showInternalConfirmDialog(null, "Tem certeza de excluir essa ResidÃªncia?", "Excluindo ResidÃªncia",0);
            if(saida == 0) {
                if(residenciaRepository.deleteResidencia(codigoResidencia)) {
                    listarResidencias();
                    limparCamporResidencia();
                    JOptionPane.showInternalMessageDialog(null, "Residencia excluida com sucesso!!");
                } else {
                    JOptionPane.showInternalMessageDialog(null, "Houve algo ao excluir a ResidÃªncia.");
                }
            }            
        } else {
            JOptionPane.showInternalMessageDialog(null, "Ã preciso selecionar uma linha na tabela para excluir um ResidÃªncia");
        }
    }//GEN-LAST:event_btnExcluirResidenciaActionPerformed

    // AÃ§Ãµes para gerenciamento de quartos.
    private void btnLimpaCamposQuartoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpaCamposQuartoActionPerformed
        // TODO add your handling code here:
        limparCamposQuarto();
    }//GEN-LAST:event_btnLimpaCamposQuartoActionPerformed

    private void btnCadastrarQuartoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCadastrarQuartoActionPerformed
        // TODO add your handling code here:
        if(tabelaResidencias.getSelectedRow() != -1) {
            int codigoResidencia = (int) tabelaResidencias.getValueAt(tabelaResidencias.getSelectedRow(), 0);
            Quarto quarto = leituraInputsQuarto();
            if(quarto == null) {
                return;
            }

            if(quartoRepository.insertQuarto(quarto, codigoResidencia)) {
                JOptionPane.showMessageDialog(null, "Quarto cadastrado com sucesso!");
                limparCamporResidencia();
                listarQuartos(codigoResidencia);
            } else {
                JOptionPane.showMessageDialog(null, "Houve um erro ao cadastrar o quarto. Tente novamente.");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Ã preciso selecionar na tabela de residÃªncia para gerenciar os quartos.");
        }
        
    }//GEN-LAST:event_btnCadastrarQuartoActionPerformed

    private void btnAtualizarQuartoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtualizarQuartoActionPerformed
        // TODO add your handling code here:
        if(tabelaResidencias.getSelectedRow() != -1) {
            int codigoResidencia = (int) tabelaResidencias.getValueAt(tabelaResidencias.getSelectedRow(), 0);
            if(tabelaQuartos.getSelectedRow() == -1){
                JOptionPane.showMessageDialog(null, "Ã preciso selecinar o quarto que deseja atualizar.");
                return;
            }
            
            int codigoQuarto = (int) tabelaQuartos.getValueAt(tabelaQuartos.getSelectedRow(), 0);
            Quarto quarto = leituraInputsQuartoUpdate(codigoQuarto);
            if(quarto == null) {
                return;
            }

            if(quartoRepository.updateQuarto(quarto)) {
                JOptionPane.showMessageDialog(null, "Quarto cadastrado com sucesso!");
                limparCamposQuarto();
                listarQuartos(codigoResidencia);
            } else {
                JOptionPane.showMessageDialog(null, "Houve um erro ao cadastrar o quarto. Tente novamente.");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Ã preciso selecionar na tabela de residÃªncia para gerenciar os quartos.");
        }
    }//GEN-LAST:event_btnAtualizarQuartoActionPerformed

    private void btnExcluirQuartoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirQuartoActionPerformed
        // TODO add your handling code here:
        if(tabelaQuartos.getSelectedRow() != -1) {
            if(tabelaResidencias.getSelectedRow() != -1) {
                int codigoResidencia = Integer.parseInt(tabelaResidencias.getValueAt(tabelaResidencias.getSelectedRow(), 0).toString());
                int codigoQuarto = (int) tabelaQuartos.getValueAt(tabelaQuartos.getSelectedRow(), 0);
                int saida = JOptionPane.showInternalConfirmDialog(null, "Tem certeza de excluir esse Quarto?", "Excluindo Quarto",0);
                
                if(saida == 0) {
                    if(quartoRepository.deleteQuarto(codigoQuarto)) {
                        listarQuartos(codigoResidencia);
                        limparCamposQuarto();
                        JOptionPane.showInternalMessageDialog(null, "Quarto excluido com sucesso!!");
                    } else {
                        JOptionPane.showInternalMessageDialog(null, "Houve algo ao excluir o Quarto.");
                    }
                }            
            } else {
                JOptionPane.showInternalMessageDialog(null, "Ã preciso selecionar uma linha na tabela um quarto para excluir.");
            }
        } else {
            JOptionPane.showInternalMessageDialog(null, "Ã preciso selecionar uma linha na tabela Residencia para excluir um Quarto.");
        }
    }//GEN-LAST:event_btnExcluirQuartoActionPerformed

    private void tabelaQuartosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaQuartosMouseClicked
        // TODO add your handling code here:
        if(tabelaQuartos.getSelectedRow() != -1) {
            inserirDadosCamposQuarto();
        }
    }//GEN-LAST:event_tabelaQuartosMouseClicked

    private void btnDesselecionarQuartoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDesselecionarQuartoActionPerformed
        // TODO add your handling code here:
        tabelaQuartos.clearSelection();
    }//GEN-LAST:event_btnDesselecionarQuartoActionPerformed
    
    // MÃ©todos para gerenciamento de Residencia
    public void inserirDadoCamposResidencia() {
        inputRuaResidencia.setText(tabelaResidencias.getValueAt(tabelaResidencias.getSelectedRow(), 1).toString());
        inputNumeroResidencia.setText(tabelaResidencias.getValueAt(tabelaResidencias.getSelectedRow(), 2).toString());
        inputBairroResidencia.setText(tabelaResidencias.getValueAt(tabelaResidencias.getSelectedRow(), 3).toString());
        inputCepResidencia.setText(tabelaResidencias.getValueAt(tabelaResidencias.getSelectedRow(), 4).toString());
        inputTelefoneResidencia.setText(tabelaResidencias.getValueAt(tabelaResidencias.getSelectedRow(), 5).toString());
        inputEmailResidencia.setText(tabelaResidencias.getValueAt(tabelaResidencias.getSelectedRow(), 6).toString());
    }
    
    public void limparCamporResidencia() {
        inputRuaResidencia.setText("");
        inputBairroResidencia.setText("");
        inputCepResidencia.setText("");
        inputNumeroResidencia.setText("");
        inputTelefoneResidencia.setText("");
        inputEmailResidencia.setText("");
    }
    
    public Residencia leituraInputsResidencia() {
        String rua = inputRuaResidencia.getText();
        String bairro = inputBairroResidencia.getText();
        int numero = Integer.parseInt(inputNumeroResidencia.getText());
        int cep = Integer.parseInt(inputCepResidencia.getText());
        String telefone = inputTelefoneResidencia.getText();
        String email = inputEmailResidencia.getText();
        
        if(rua.length() == 0 || bairro.length() == 0 || numero == 0 || cep == 0 || telefone.length() == 0|| email.length() == 0) {
            JOptionPane.showMessageDialog(null, "HÃ¡ campos necessÃ¡rios vazios!");
            return null;
        }
        
        return new Residencia(rua,numero,bairro,cep,telefone,email);
    }
    
    public Residencia leituraInputsResidenciaUpdate(int codigo) {
        Residencia residencia = residenciaRepository.getResidencia(codigo);
        if(residencia == null) {
            JOptionPane.showMessageDialog(null, "ResidÃªncia nÃ£o encontrada no banco de dados.");
            return null;
        }
        
        String rua = inputRuaResidencia.getText();
        String bairro = inputBairroResidencia.getText();
        int numero = Integer.parseInt(inputNumeroResidencia.getText());
        int cep = Integer.parseInt(inputCepResidencia.getText());
        String telefone = inputTelefoneResidencia.getText();
        String email = inputEmailResidencia.getText();
        
        if(rua.length() == 0 || bairro.length() == 0 || numero == 0 || cep == 0 || telefone.length() == 0|| email.length() == 0) {
            JOptionPane.showMessageDialog(null, "HÃ¡ campos necessÃ¡rios vazios!");
            return null;
        }
        
        residencia.setRua(rua);
        residencia.setBairro(bairro);
        residencia.setNumero(numero);
        residencia.setCep(cep);
        residencia.setTelefone(telefone);
        residencia.setEmail(email);
        
        return residencia;
    }
    
    public void listarResidencias() {
        DefaultTableModel tabela = (DefaultTableModel) tabelaResidencias.getModel();
        tabela.setNumRows(0);
        for(Residencia residencia: residenciaRepository.getAll()) {
            tabela.addRow(new Object[]{
                    residencia.getCod(),
                    residencia.getRua(), 
                    residencia.getNumero(), 
                    residencia.getBairro(), 
                    residencia.getCep(),
                    residencia.getTelefone(),
                    residencia.getEmail()
            });
        }
    }
    
    
    // MÃ©todos para gernciamento dos Quartos das Residencias.
    public void limparCamposQuarto() {
        inputValorDiaria.setText("");
        inputCapacidadeHospedes.setText("");
        checkArCondicionado.setSelected(false);
        checkBanheiraHidromassagem.setSelected(false);
    }
    
    public void inserirDadosCamposQuarto() {
        inputValorDiaria.setText(tabelaQuartos.getValueAt(tabelaQuartos.getSelectedRow(), 1).toString());
        inputCapacidadeHospedes.setText(tabelaQuartos.getValueAt(tabelaQuartos.getSelectedRow(), 2).toString());
        checkArCondicionado.setSelected((boolean) tabelaQuartos.getValueAt(tabelaQuartos.getSelectedRow(), 3));
        checkBanheiraHidromassagem.setSelected((boolean) tabelaQuartos.getValueAt(tabelaQuartos.getSelectedRow(), 4));
    }
    
    public Quarto leituraInputsQuarto() {
        double valorDiaria = 0;
        int capacidadeHospede = 0;
        try {
            valorDiaria = Double.parseDouble(inputValorDiaria.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "O Campo do valor da diÃ¡ria tem que ser digitos numerios.");
            return null;
        }
        try {
            capacidadeHospede = Integer.parseInt(inputCapacidadeHospedes.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "O Campo do capacidade de hospede tem que ser digitos numerios.");
            return null;
        }
        
        
        boolean arCondicionado = checkArCondicionado.isSelected();
        boolean banheiraHidromassagem = checkBanheiraHidromassagem.isSelected();
        
        return new Quarto(valorDiaria, capacidadeHospede, arCondicionado, banheiraHidromassagem);
    }
    
    public Quarto leituraInputsQuartoUpdate(int codigoQuarto) {
        Quarto quarto = quartoRepository.getQuarto(codigoQuarto);
        if(quarto == null) {
            JOptionPane.showMessageDialog(null, "Quarto nÃ£o encontrado");
            return quarto;
        }
        
        double valorDiaria = 0;
        int capacidadeHospede = 0;
        try {
            valorDiaria = Double.parseDouble(inputValorDiaria.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "O Campo do valor da diÃ¡ria tem que ser digitos numerios.");
            return null;
        }
        try {
            capacidadeHospede = Integer.parseInt(inputCapacidadeHospedes.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "O Campo do capacidade de hospede tem que ser digitos numerios.");
            return null;
        }
        
        boolean arCondicionado = checkArCondicionado.isSelected();
        boolean banheiraHidromassagem = checkBanheiraHidromassagem.isSelected();
        
        quarto.setValorDiaria(valorDiaria);
        quarto.setCapacidadePessoas(capacidadeHospede);
        quarto.setArCondicionado(arCondicionado);
        quarto.setBanheiraHidromassagem(banheiraHidromassagem);
        
        return quarto;
    }
    
    public void listarQuartos(int codigoResidencia) {
        DefaultTableModel tabela = (DefaultTableModel) tabelaQuartos.getModel();
        tabela.setNumRows(0);
        for(Quarto quarto: quartoRepository.getAllQuartosResidencia(codigoResidencia)) {
            tabela.addRow(new Object[]{
                quarto.getCod(),
                quarto.getValorDiaria(),
                quarto.getCapacidadePessoa(),
                quarto.getArcondicionado(),
                quarto.getBanheiraHidromassagem(),
                quarto.getIsDisponivel()
            });
        }
    }
    
    public void limparTabelaQuartos() {
        DefaultTableModel tabela = (DefaultTableModel) tabelaQuartos.getModel();
        tabela.setNumRows(0);
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GerenciamentoResidencia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GerenciamentoResidencia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GerenciamentoResidencia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GerenciamentoResidencia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GerenciamentoResidencia().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAtualizarQuarto;
    private javax.swing.JButton btnAtualizarResidencia;
    private javax.swing.JButton btnCadastrarQuarto;
    private javax.swing.JButton btnCadastrarResidencia;
    private javax.swing.JButton btnDesselecionarQuarto;
    private javax.swing.JButton btnDesselecionarResidencia;
    private javax.swing.JButton btnExcluirQuarto;
    private javax.swing.JButton btnExcluirResidencia;
    private javax.swing.JButton btnFecharGerenciamento;
    private javax.swing.JButton btnLimpaCamposQuarto;
    private javax.swing.JButton btnLimparCamposResidencia;
    private javax.swing.JCheckBox checkArCondicionado;
    private javax.swing.JCheckBox checkBanheiraHidromassagem;
    private javax.swing.JTextField inputBairroResidencia;
    private javax.swing.JTextField inputCapacidadeHospedes;
    private javax.swing.JTextField inputCepResidencia;
    private javax.swing.JTextField inputEmailResidencia;
    private javax.swing.JTextField inputNumeroResidencia;
    private javax.swing.JTextField inputRuaResidencia;
    private javax.swing.JFormattedTextField inputTelefoneResidencia;
    private javax.swing.JTextField inputValorDiaria;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable tabelaQuartos;
    private javax.swing.JTable tabelaResidencias;
    // End of variables declaration//GEN-END:variables
}
