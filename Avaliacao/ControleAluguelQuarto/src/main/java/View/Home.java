/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package View;

import Model.Entity.Aluguel;
import Model.Entity.Hospede;
import Model.Entity.Quarto;
import Model.Entity.Residencia;
import Model.Repository.AluguelRepository;
import Model.Repository.HospedeRepository;
import Model.Repository.QuartoRepository;
import Model.Repository.ResidenciaRepository;
import java.awt.CardLayout;
import java.awt.Color;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Alysson Pereira
 */
public class Home extends javax.swing.JFrame {
    private static final HospedeRepository hospedeRepository = new HospedeRepository();
    private static final QuartoRepository quartoRepository = new QuartoRepository();
    private static final ResidenciaRepository residenciaRepository = new ResidenciaRepository();
    private static final AluguelRepository aluguelRepository = new AluguelRepository();
    
    private CardLayout cl;
    private Color colorEnable, colorDisabled;
    private static final DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd/MM/yyyy HH:mm");
    private static final DateTimeFormatter formatterSemHora = DateTimeFormatter.ofPattern("dd/MM/yyyy");
    /**
     * Creates new form Home
     */
    public Home() {
        initComponents();
        setTitle("Aluguel Quartos");
        cl = (CardLayout) Main.getLayout();
        colorEnable = new Color(161,193,224);
        colorDisabled = new Color(82,142,201);
        btnHomeMouseClicked(null);   
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        sidebar = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        btnHome = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        btnHospedes = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        btnResidencias = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        btnAlugueis = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        Main = new javax.swing.JPanel();
        HomePage = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        tabelaQuartosDiponiveis = new javax.swing.JTable();
        btnSelecionarQuarto = new javax.swing.JButton();
        btnDesselecionarQuarto = new javax.swing.JButton();
        HospedesPage = new javax.swing.JPanel();
        TitleHospedes = new javax.swing.JLabel();
        CadastrarHospede = new javax.swing.JButton();
        AtualizarDadosHospedes = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaHospedes = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        inputCpfHospede = new javax.swing.JFormattedTextField();
        jLabel11 = new javax.swing.JLabel();
        inputNomeHospede = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        inputEnderecoHospede = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        inputEmailHospede = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        inputCelularHospede = new javax.swing.JFormattedTextField();
        LimparCamposHospede = new javax.swing.JButton();
        btnDesselecionarHospede = new javax.swing.JButton();
        ExcluirHospede = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        inputCpfHospedeBusca = new javax.swing.JFormattedTextField();
        btnBuscarHospede = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();
        resetarBuscaHospede = new javax.swing.JButton();
        AlugueisPage = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabelaAlugueis = new javax.swing.JTable();
        btnAlugar = new javax.swing.JButton();
        btnAtualizarAluguel = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        inputCpfHospedeAluguel = new javax.swing.JFormattedTextField();
        jLabel1 = new javax.swing.JLabel();
        inputDataEntrada = new javax.swing.JFormattedTextField();
        jLabel19 = new javax.swing.JLabel();
        inputDataSaida = new javax.swing.JFormattedTextField();
        jLabel20 = new javax.swing.JLabel();
        inputCodigoQuarto = new javax.swing.JTextField();
        txtRespostaHospede = new javax.swing.JLabel();
        txtRespostaQuarto = new javax.swing.JLabel();
        checkPago = new javax.swing.JCheckBox();
        btnLimparCamposAluguel = new javax.swing.JButton();
        btnBuscarCliente = new javax.swing.JButton();
        btnQuarto = new javax.swing.JButton();
        ExcluirAluguel = new javax.swing.JButton();
        btnDesselecionarAluguel = new javax.swing.JButton();
        btnFinalizarAluguel = new javax.swing.JButton();
        ResidenciasPage = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tabelaResidencias = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        tabelaQuartosResidencia = new javax.swing.JTable();
        btnGerenciamentoResidencia = new javax.swing.JButton();
        btnDesselecionarResidendia = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));

        sidebar.setBackground(new java.awt.Color(0, 102, 204));
        sidebar.setPreferredSize(new java.awt.Dimension(220, 500));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("AlugaQuarto");

        btnHome.setBackground(new java.awt.Color(161, 193, 224));
        btnHome.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnHomeMouseClicked(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Home");

        javax.swing.GroupLayout btnHomeLayout = new javax.swing.GroupLayout(btnHome);
        btnHome.setLayout(btnHomeLayout);
        btnHomeLayout.setHorizontalGroup(
            btnHomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(btnHomeLayout.createSequentialGroup()
                .addGap(85, 85, 85)
                .addComponent(jLabel2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        btnHomeLayout.setVerticalGroup(
            btnHomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
        );

        btnHospedes.setBackground(new java.awt.Color(82, 142, 201));
        btnHospedes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnHospedesMouseClicked(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Hospedes");

        javax.swing.GroupLayout btnHospedesLayout = new javax.swing.GroupLayout(btnHospedes);
        btnHospedes.setLayout(btnHospedesLayout);
        btnHospedesLayout.setHorizontalGroup(
            btnHospedesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(btnHospedesLayout.createSequentialGroup()
                .addGap(69, 69, 69)
                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(74, 74, 74))
        );
        btnHospedesLayout.setVerticalGroup(
            btnHospedesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
        );

        btnResidencias.setBackground(new java.awt.Color(82, 142, 201));
        btnResidencias.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnResidenciasMouseClicked(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Residencias");

        javax.swing.GroupLayout btnResidenciasLayout = new javax.swing.GroupLayout(btnResidencias);
        btnResidencias.setLayout(btnResidenciasLayout);
        btnResidenciasLayout.setHorizontalGroup(
            btnResidenciasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(btnResidenciasLayout.createSequentialGroup()
                .addGap(66, 66, 66)
                .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(64, 64, 64))
        );
        btnResidenciasLayout.setVerticalGroup(
            btnResidenciasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
        );

        btnAlugueis.setBackground(new java.awt.Color(82, 142, 201));
        btnAlugueis.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnAlugueisMouseClicked(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Alugueis");

        javax.swing.GroupLayout btnAlugueisLayout = new javax.swing.GroupLayout(btnAlugueis);
        btnAlugueis.setLayout(btnAlugueisLayout);
        btnAlugueisLayout.setHorizontalGroup(
            btnAlugueisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(btnAlugueisLayout.createSequentialGroup()
                .addGap(73, 73, 73)
                .addComponent(jLabel7)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        btnAlugueisLayout.setVerticalGroup(
            btnAlugueisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout sidebarLayout = new javax.swing.GroupLayout(sidebar);
        sidebar.setLayout(sidebarLayout);
        sidebarLayout.setHorizontalGroup(
            sidebarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sidebarLayout.createSequentialGroup()
                .addGroup(sidebarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(sidebarLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(sidebarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(btnHospedes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnResidencias, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnAlugueis, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnHome, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(14, 14, 14))
        );
        sidebarLayout.setVerticalGroup(
            sidebarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sidebarLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel6)
                .addGap(2, 2, 2)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addComponent(btnHome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(btnHospedes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(btnResidencias, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(btnAlugueis, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(291, Short.MAX_VALUE))
        );

        Main.setLayout(new java.awt.CardLayout());

        HomePage.setBackground(new java.awt.Color(255, 255, 255));

        jLabel4.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel4.setText("Quartos Diponiveis");

        tabelaQuartosDiponiveis.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Cod_quarto", "Endereco da residencia", "Valor da diária", "Ar Condicionado", "Banheira Hidromassagem"
            }
        ));
        tabelaQuartosDiponiveis.setSelectionBackground(new java.awt.Color(51, 102, 255));
        tabelaQuartosDiponiveis.setSelectionForeground(new java.awt.Color(255, 255, 255));
        jScrollPane5.setViewportView(tabelaQuartosDiponiveis);

        btnSelecionarQuarto.setText("Selecionar Quarto");
        btnSelecionarQuarto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelecionarQuartoActionPerformed(evt);
            }
        });

        btnDesselecionarQuarto.setText("Desselecionar");
        btnDesselecionarQuarto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDesselecionarQuartoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout HomePageLayout = new javax.swing.GroupLayout(HomePage);
        HomePage.setLayout(HomePageLayout);
        HomePageLayout.setHorizontalGroup(
            HomePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HomePageLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(HomePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnSelecionarQuarto)
                    .addGroup(HomePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(HomePageLayout.createSequentialGroup()
                            .addComponent(jLabel4)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnDesselecionarQuarto))
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 660, Short.MAX_VALUE)))
                .addGap(22, 22, 22))
        );
        HomePageLayout.setVerticalGroup(
            HomePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HomePageLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(HomePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(btnDesselecionarQuarto))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSelecionarQuarto)
                .addContainerGap(111, Short.MAX_VALUE))
        );

        Main.add(HomePage, "cardHome");

        HospedesPage.setBackground(new java.awt.Color(255, 255, 255));
        HospedesPage.setForeground(new java.awt.Color(102, 102, 102));

        TitleHospedes.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        TitleHospedes.setText("Hospedes");

        CadastrarHospede.setText("Cadastrar");
        CadastrarHospede.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CadastrarHospedeMouseClicked(evt);
            }
        });

        AtualizarDadosHospedes.setText("Atualizar dados");
        AtualizarDadosHospedes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AtualizarDadosHospedesActionPerformed(evt);
            }
        });

        tabelaHospedes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "CPF", "Nome", "Endereco", "Telefone", "Email"
            }
        ));
        tabelaHospedes.setSelectionBackground(new java.awt.Color(51, 102, 255));
        tabelaHospedes.setSelectionForeground(new java.awt.Color(255, 255, 255));
        tabelaHospedes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelaHospedesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabelaHospedes);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Dados Hospede"));

        jLabel10.setText("CPF:");

        try {
            inputCpfHospede.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        jLabel11.setText("Nome:");

        jLabel12.setText("Endereço:");

        jLabel13.setText("Email:");

        jLabel14.setText("Celular:");

        try {
            inputCelularHospede.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("(##)#####-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        LimparCamposHospede.setText("Limpar Campos");
        LimparCamposHospede.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LimparCamposHospedeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(inputCpfHospede, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(inputNomeHospede, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(inputEnderecoHospede, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(inputEmailHospede, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(inputCelularHospede, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(LimparCamposHospede)))
                .addContainerGap(101, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(inputCpfHospede, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11)
                    .addComponent(inputNomeHospede, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(inputEnderecoHospede, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13)
                    .addComponent(inputEmailHospede, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(inputCelularHospede, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(LimparCamposHospede))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnDesselecionarHospede.setText("Desselecionar");
        btnDesselecionarHospede.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDesselecionarHospedeActionPerformed(evt);
            }
        });

        ExcluirHospede.setText("Excluir");
        ExcluirHospede.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExcluirHospedeActionPerformed(evt);
            }
        });

        jLabel15.setText("CPF:");

        try {
            inputCpfHospedeBusca.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        btnBuscarHospede.setText("Buscar Hospede");
        btnBuscarHospede.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarHospedeActionPerformed(evt);
            }
        });

        jLabel16.setForeground(new java.awt.Color(102, 102, 102));
        jLabel16.setText("Buscar Hospede");

        resetarBuscaHospede.setText("Resetar Pesquisa");
        resetarBuscaHospede.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetarBuscaHospedeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout HospedesPageLayout = new javax.swing.GroupLayout(HospedesPage);
        HospedesPage.setLayout(HospedesPageLayout);
        HospedesPageLayout.setHorizontalGroup(
            HospedesPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, HospedesPageLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(HospedesPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(HospedesPageLayout.createSequentialGroup()
                        .addGroup(HospedesPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, HospedesPageLayout.createSequentialGroup()
                                .addComponent(CadastrarHospede)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(AtualizarDadosHospedes)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ExcluirHospede)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(HospedesPageLayout.createSequentialGroup()
                                .addComponent(jLabel15)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(inputCpfHospedeBusca, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnBuscarHospede)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(resetarBuscaHospede)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnDesselecionarHospede)))
                        .addGap(18, 18, 18))
                    .addGroup(HospedesPageLayout.createSequentialGroup()
                        .addGroup(HospedesPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(TitleHospedes, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel16, javax.swing.GroupLayout.Alignment.LEADING))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        HospedesPageLayout.setVerticalGroup(
            HospedesPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HospedesPageLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(TitleHospedes)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel16)
                .addGap(5, 5, 5)
                .addGroup(HospedesPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDesselecionarHospede)
                    .addComponent(jLabel15)
                    .addComponent(inputCpfHospedeBusca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscarHospede)
                    .addComponent(resetarBuscaHospede))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(HospedesPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CadastrarHospede)
                    .addComponent(AtualizarDadosHospedes)
                    .addComponent(ExcluirHospede))
                .addGap(116, 116, 116))
        );

        Main.add(HospedesPage, "cardHospedes");

        AlugueisPage.setBackground(new java.awt.Color(255, 255, 255));

        jLabel8.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel8.setText("Alugueis");

        tabelaAlugueis.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo", "Nome Hospede", "CPF Hospede", "Cod_quarto", "Endereco da residencia", "Data de Entrada", "Data Saida", "Quatidade Diária", "Valor Aluguel", "Pago", "Finalizado"
            }
        ));
        tabelaAlugueis.setSelectionBackground(new java.awt.Color(51, 102, 255));
        tabelaAlugueis.setSelectionForeground(new java.awt.Color(255, 255, 255));
        tabelaAlugueis.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelaAlugueisMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tabelaAlugueis);

        btnAlugar.setText("Alugar ");
        btnAlugar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlugarActionPerformed(evt);
            }
        });

        btnAtualizarAluguel.setText("Atualizar dados");
        btnAtualizarAluguel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtualizarAluguelActionPerformed(evt);
            }
        });

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Dados Aluguel"));

        jLabel18.setText("CPF:");

        try {
            inputCpfHospedeAluguel.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        jLabel1.setText("Data de Entrada:");

        try {
            inputDataEntrada.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        jLabel19.setText("Data de Saída:");

        try {
            inputDataSaida.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        jLabel20.setText("Código do quarto:");

        txtRespostaHospede.setText("Resposta da pesquisa");

        txtRespostaQuarto.setText("Resposta da pesquisa");

        checkPago.setText("Aluguel Pago?");

        btnLimparCamposAluguel.setText("Limpar Campos");
        btnLimparCamposAluguel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimparCamposAluguelActionPerformed(evt);
            }
        });

        btnBuscarCliente.setText("Buscar");
        btnBuscarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarClienteActionPerformed(evt);
            }
        });

        btnQuarto.setText("Buscar");
        btnQuarto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQuartoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(checkPago)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnLimparCamposAluguel))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel18)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(inputCpfHospedeAluguel, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel20)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(inputCodigoQuarto)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnBuscarCliente)
                            .addComponent(btnQuarto))
                        .addGap(12, 12, 12)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txtRespostaQuarto, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
                            .addComponent(txtRespostaHospede, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel19)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(inputDataSaida, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(inputDataEntrada, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(inputCpfHospedeAluguel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(inputDataEntrada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtRespostaHospede)
                    .addComponent(btnBuscarCliente))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(inputDataSaida, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel20)
                    .addComponent(inputCodigoQuarto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtRespostaQuarto)
                    .addComponent(btnQuarto))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(checkPago)
                    .addComponent(btnLimparCamposAluguel))
                .addContainerGap(12, Short.MAX_VALUE))
        );

        ExcluirAluguel.setText("Excluir");
        ExcluirAluguel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExcluirAluguelActionPerformed(evt);
            }
        });

        btnDesselecionarAluguel.setText("Desselecionar");
        btnDesselecionarAluguel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDesselecionarAluguelActionPerformed(evt);
            }
        });

        btnFinalizarAluguel.setText("Finalizar Aluguel");
        btnFinalizarAluguel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFinalizarAluguelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout AlugueisPageLayout = new javax.swing.GroupLayout(AlugueisPage);
        AlugueisPage.setLayout(AlugueisPageLayout);
        AlugueisPageLayout.setHorizontalGroup(
            AlugueisPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AlugueisPageLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(AlugueisPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(AlugueisPageLayout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(AlugueisPageLayout.createSequentialGroup()
                        .addGroup(AlugueisPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 660, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, AlugueisPageLayout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnDesselecionarAluguel)))
                        .addGap(18, 18, 18))
                    .addGroup(AlugueisPageLayout.createSequentialGroup()
                        .addComponent(btnAlugar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAtualizarAluguel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnFinalizarAluguel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ExcluirAluguel)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        AlugueisPageLayout.setVerticalGroup(
            AlugueisPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AlugueisPageLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(AlugueisPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(btnDesselecionarAluguel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(AlugueisPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAlugar)
                    .addComponent(btnAtualizarAluguel)
                    .addComponent(ExcluirAluguel)
                    .addComponent(btnFinalizarAluguel))
                .addContainerGap(78, Short.MAX_VALUE))
        );

        Main.add(AlugueisPage, "cardAlugueis");

        ResidenciasPage.setBackground(new java.awt.Color(255, 255, 255));

        jLabel9.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel9.setText("Quartos da residencia");

        jLabel17.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel17.setText("Residencias");

        tabelaResidencias.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Rua", "Bairro", "Número", "Cep", "Telefone", "Email"
            }
        ));
        tabelaResidencias.setSelectionBackground(new java.awt.Color(51, 102, 255));
        tabelaResidencias.setSelectionForeground(new java.awt.Color(255, 255, 255));
        jScrollPane3.setViewportView(tabelaResidencias);

        tabelaQuartosResidencia.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Valor Diária", "Capacidade de Hospede", "Ar Condicionado", "Banheira Hidromassagem"
            }
        ));
        tabelaQuartosResidencia.setSelectionBackground(new java.awt.Color(51, 102, 255));
        tabelaQuartosResidencia.setSelectionForeground(new java.awt.Color(255, 255, 255));
        jScrollPane4.setViewportView(tabelaQuartosResidencia);

        btnGerenciamentoResidencia.setText("Gerenciar Residencias e Quartos");
        btnGerenciamentoResidencia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGerenciamentoResidenciaActionPerformed(evt);
            }
        });

        btnDesselecionarResidendia.setText("Desselecionar");

        javax.swing.GroupLayout ResidenciasPageLayout = new javax.swing.GroupLayout(ResidenciasPage);
        ResidenciasPage.setLayout(ResidenciasPageLayout);
        ResidenciasPageLayout.setHorizontalGroup(
            ResidenciasPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ResidenciasPageLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(ResidenciasPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 646, Short.MAX_VALUE)
                    .addComponent(jScrollPane4)
                    .addGroup(ResidenciasPageLayout.createSequentialGroup()
                        .addGroup(ResidenciasPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addComponent(btnGerenciamentoResidencia))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(ResidenciasPageLayout.createSequentialGroup()
                        .addComponent(jLabel17)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnDesselecionarResidendia)))
                .addGap(33, 33, 33))
        );
        ResidenciasPageLayout.setVerticalGroup(
            ResidenciasPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ResidenciasPageLayout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(ResidenciasPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(btnDesselecionarResidendia))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnGerenciamentoResidencia)
                .addContainerGap(79, Short.MAX_VALUE))
        );

        Main.add(ResidenciasPage, "cardResidencias");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(sidebar, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(Main, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Main, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
            .addComponent(sidebar, javax.swing.GroupLayout.DEFAULT_SIZE, 546, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    // Naveggação
    private void btnHomeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnHomeMouseClicked
        // TODO add your handling code here:        
//        CardLayout cl = (CardLayout) Main.getLayout();;
        cl.show(Main, "cardHome");
        
        btnHome.setBackground( colorEnable);
        btnHospedes.setBackground( colorDisabled);
        btnResidencias.setBackground(colorDisabled);
        btnAlugueis.setBackground(colorDisabled);
        
        listarQuartosDisponiveis();
    }//GEN-LAST:event_btnHomeMouseClicked

    private void btnHospedesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnHospedesMouseClicked
        // TODO add your handling code here:
//        CardLayout cl = (CardLayout) Main.getLayout();
        cl.show(Main, "cardHospedes");
        
        btnHome.setBackground( colorDisabled);
        btnHospedes.setBackground( colorEnable);
        btnResidencias.setBackground(colorDisabled);
        btnAlugueis.setBackground(colorDisabled);
        
        listarHospedes();
    }//GEN-LAST:event_btnHospedesMouseClicked

    private void btnResidenciasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnResidenciasMouseClicked
        // TODO add your handling code here:
//        CardLayout cl = (CardLayout) Main.getLayout();
        cl.show(Main, "cardResidencias");
        
        btnHome.setBackground( colorDisabled);
        btnHospedes.setBackground( colorDisabled);
        btnResidencias.setBackground(colorEnable);
        btnAlugueis.setBackground(colorDisabled);
        
    }//GEN-LAST:event_btnResidenciasMouseClicked

    private void btnAlugueisMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAlugueisMouseClicked
        // TODO add your handling code here:
//        CardLayout cl = (CardLayout) Main.getLayout();
        cl.show(Main, "cardAlugueis");
        
        btnHome.setBackground( colorDisabled);
        btnHospedes.setBackground( colorDisabled);
        btnResidencias.setBackground(colorDisabled);
        btnAlugueis.setBackground(colorEnable);
        
        listarAlugueis();
    }//GEN-LAST:event_btnAlugueisMouseClicked
    
    // Ações de gerenciamento de hospedes.
    private void AtualizarDadosHospedesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AtualizarDadosHospedesActionPerformed
        // TODO add your handling code here:
        Hospede hospede = leituraInputHospedeUpdate();
        if(hospede == null) {
            return;
        }
        
        if(hospedeRepository.updateHospede(hospede)) {
            JOptionPane.showMessageDialog(null, "Hospede atualizado com Sucesso!!");
            
        }
        
        listarHospedes();
        limparCamposHospede();
    }//GEN-LAST:event_AtualizarDadosHospedesActionPerformed

    private void btnDesselecionarHospedeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDesselecionarHospedeActionPerformed
        // TODO add your handling code here:
        desselecionar(tabelaHospedes);
    }//GEN-LAST:event_btnDesselecionarHospedeActionPerformed

    private void tabelaHospedesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaHospedesMouseClicked
        // TODO add your handling code here:
        if(tabelaHospedes.getSelectedRow() != -1) {
            inserirDadosHospede();
        }
    }//GEN-LAST:event_tabelaHospedesMouseClicked

    private void LimparCamposHospedeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LimparCamposHospedeActionPerformed
        // TODO add your handling code here:
        limparCamposHospede();
    }//GEN-LAST:event_LimparCamposHospedeActionPerformed

    private void CadastrarHospedeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CadastrarHospedeMouseClicked
        // TODO add your handling code here:
        Hospede hospede = leituraInputHospede();
        if(hospede == null) {
            return;
        }
        
        if(hospedeRepository.insertHospede(hospede)) {
            JOptionPane.showMessageDialog(null, "Hospede Cadastrados com Sucesso!!");
        }
        
        listarHospedes();
        limparCamposHospede();
    }//GEN-LAST:event_CadastrarHospedeMouseClicked

    private void ExcluirHospedeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExcluirHospedeActionPerformed
        // TODO add your handling code here:
        if(tabelaHospedes.getSelectedRow() != -1) {
            String cpfHospede = tabelaHospedes.getValueAt(tabelaHospedes.getSelectedRow(), 0).toString();
            int saida = JOptionPane.showInternalConfirmDialog(null, "Tem certeza de excluir essa Hospede?", "Excluindo Hospede",0);
            if(saida == 0) {
                if(hospedeRepository.deleteHospede(cpfHospede)) {
                    listarHospedes();
                    limparCamposHospede();
                    JOptionPane.showInternalMessageDialog(null, "Hospede excluida com sucesso!!");
                } else {
                    JOptionPane.showInternalMessageDialog(null, "Houve algo ao excluir Hospede.");
                }
            }            
        } else {
            JOptionPane.showInternalMessageDialog(null, "É preciso selecionar uma linha na tabela para excluir um Hospede");
        }
        
    }//GEN-LAST:event_ExcluirHospedeActionPerformed

    private void btnBuscarHospedeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarHospedeActionPerformed
        // TODO add your handling code here:
        buscarHospede();
    }//GEN-LAST:event_btnBuscarHospedeActionPerformed

    private void resetarBuscaHospedeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetarBuscaHospedeActionPerformed
        // TODO add your handling code here:
        listarHospedes();
        inputCpfHospedeBusca.setText("");
    }//GEN-LAST:event_resetarBuscaHospedeActionPerformed
    
    // Ação para Residencia.
    private void btnGerenciamentoResidenciaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGerenciamentoResidenciaActionPerformed
        // TODO add your handling code here:
        new GerenciamentoResidencia().setVisible(true);
    }//GEN-LAST:event_btnGerenciamentoResidenciaActionPerformed

    // Ações da pagina Home.
    private void btnDesselecionarQuartoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDesselecionarQuartoActionPerformed
        // TODO add your handling code here:
        tabelaQuartosDiponiveis.clearSelection();
    }//GEN-LAST:event_btnDesselecionarQuartoActionPerformed

    private void btnSelecionarQuartoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelecionarQuartoActionPerformed
        // TODO add your handling code here:
        if(tabelaQuartosDiponiveis.getSelectedRow() != -1) {
            inserirDadosQuartoAluguel();
            btnAlugueisMouseClicked(null);
        } else {
            JOptionPane.showMessageDialog(null, "É preciso selecionar um quarto para alugar.");
        }
    }//GEN-LAST:event_btnSelecionarQuartoActionPerformed

    // Ações da pagina Aluguel
    private void btnBuscarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarClienteActionPerformed
        // TODO add your handling code here:
        String cpf = verificadorCpf(inputCpfHospedeAluguel);
        if(isHospedeCadastrado(cpf)) {
            txtRespostaHospede.setText("Hospede Encontrado.");
        } else {
            txtRespostaHospede.setText("Hospede não encontrado.");
        }
    }//GEN-LAST:event_btnBuscarClienteActionPerformed

    private void btnQuartoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQuartoActionPerformed
        // TODO add your handling code here:
        try {
            int codigoQuarto = Integer.parseInt(inputCodigoQuarto.getText());
            if(quartoCadastrado(codigoQuarto)) {
                txtRespostaQuarto.setText("Quarto Encontrado.");
            } else {
                txtRespostaQuarto.setText("Quarto não encontrado.");
            }
        } catch(NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "É preciso informar o codigo do quarto em digito numerico.");
        }
    }//GEN-LAST:event_btnQuartoActionPerformed

    private void btnLimparCamposAluguelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimparCamposAluguelActionPerformed
        // TODO add your handling code here:
        limparCamposDadosAluguel();
    }//GEN-LAST:event_btnLimparCamposAluguelActionPerformed

    private void btnDesselecionarAluguelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDesselecionarAluguelActionPerformed
        // TODO add your handling code here:
        tabelaAlugueis.clearSelection();
    }//GEN-LAST:event_btnDesselecionarAluguelActionPerformed

    private void btnAlugarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlugarActionPerformed
        // TODO add your handling code here:
        Aluguel aluguel = leituraInputsAluguel();
        if(aluguel == null) {
            return;
        }
        
        aluguelRepository.insertAluguel(aluguel);
        JOptionPane.showMessageDialog(null, "Aluguel realizado com sucesso!");
        limparCamposDadosAluguel();
        listarAlugueis();
    }//GEN-LAST:event_btnAlugarActionPerformed

    private void btnAtualizarAluguelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtualizarAluguelActionPerformed
        // TODO add your handling code here:
        if(tabelaAlugueis.getSelectedRow() != -1) {
            int codigoAluguel = (int) tabelaAlugueis.getValueAt(tabelaAlugueis.getSelectedRow(), 0);
            Aluguel aluguel = leituraInputsAluguelUpdate(codigoAluguel);
            if(aluguel == null) {
                return;
            }

            aluguelRepository.updateAluguel(aluguel);
            JOptionPane.showMessageDialog(null, "Aluguel atualizado com sucesso!");
            limparCamposDadosAluguel();
            listarAlugueis();
        } else {
            JOptionPane.showMessageDialog(null, "É preciso selelcionar um linha para atualizar.");
        }
        
    }//GEN-LAST:event_btnAtualizarAluguelActionPerformed

    private void tabelaAlugueisMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaAlugueisMouseClicked
        // TODO add your handling code here:
        if(tabelaAlugueis.getSelectedRow() != -1) {
            inserirDadosAluguel();
        }
    }//GEN-LAST:event_tabelaAlugueisMouseClicked

    private void ExcluirAluguelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExcluirAluguelActionPerformed
        // TODO add your handling code here:
        if(tabelaAlugueis.getSelectedRow() != -1) {
            int codigoAluguel = (int) tabelaAlugueis.getValueAt(tabelaAlugueis.getSelectedRow(), 0);
            int saida = JOptionPane.showInternalConfirmDialog(null, "Tem certeza de excluir essa Aluguel?", "Excluindo Aluguel",0);
            if(saida == 0) {
                if(aluguelRepository.deleteAluguel(codigoAluguel)) {
                    listarAlugueis();
                    limparCamposDadosAluguel();
                    JOptionPane.showInternalMessageDialog(null, "Aluguel excluido com sucesso!!");
                } else {
                    JOptionPane.showInternalMessageDialog(null, "Houve algo ao excluir Aluguel.");
                }
            }            
        } else {
            JOptionPane.showInternalMessageDialog(null, "É preciso selecionar uma linha na tabela para excluir um Aluguel.");
        }
    }//GEN-LAST:event_ExcluirAluguelActionPerformed

    private void btnFinalizarAluguelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFinalizarAluguelActionPerformed
        // TODO add your handling code here:
        if(tabelaAlugueis.getSelectedRow() != -1) {
            int codigoAluguel = (int) tabelaAlugueis.getValueAt(tabelaAlugueis.getSelectedRow(), 0);
            finalizarAluguel(codigoAluguel);
            listarQuartosDisponiveis();
        }
    }//GEN-LAST:event_btnFinalizarAluguelActionPerformed
    
    // Métodos gerais
    public void desselecionar(javax.swing.JTable tabela) {
        tabela.clearSelection();
    }
    
    // Métodos para home.
    public void listarQuartosDisponiveis() {
        DefaultTableModel tabela = (DefaultTableModel) tabelaQuartosDiponiveis.getModel();
        tabela.setNumRows(0);
        String endereco;
        for(Residencia residencia: residenciaRepository.getAll()) {
            
            for(Quarto quarto: quartoRepository.getQuartosDisponiveisResidencia(residencia.getCod())) {
                tabela.addRow(new Object[] {
                    quarto.getCod(),
                    residencia.getEndereco(),
                    quarto.getValorDiaria(),
                    (quarto.getArcondicionado()) ? "SIM" : "Não",
                    (quarto.getBanheiraHidromassagem()) ? "SIM" : "Não"
                });
            }
        }
    }
    
    public void inserirDadosQuartoAluguel() {
        inputCodigoQuarto.setText(tabelaQuartosDiponiveis.getValueAt(tabelaQuartosDiponiveis.getSelectedRow(), 0).toString());
    }
    
    // Métodos para Hospedes
    public void buscarHospede() {
        String cpfBuscado = inputCpfHospedeBusca.getText();
        if(cpfBuscado.contains(" ")) {
            JOptionPane.showInternalMessageDialog(null, "Espaço de CPF está vazio.");
            return;
        }
        Hospede hospede = hospedeRepository.getHospede(cpfBuscado);
        if(hospede == null) {
            JOptionPane.showInternalMessageDialog(null, "Hospede não encontrado!");
            return;
        }
        DefaultTableModel modelo = (DefaultTableModel) tabelaHospedes.getModel();
        modelo.setNumRows(0);
        modelo.addRow(new Object[]{hospede.getCpf(), hospede.getNome(), hospede.getEndereco(), hospede.getCelular(), hospede.getEmail()});
        
        
    }
    
    public String verificadorCpf(javax.swing.JFormattedTextField inputCpf) {
        String cpf = inputCpf.getText();
        if(inputCpf.getText().contains(" ")) {
            JOptionPane.showInternalMessageDialog(null, "Espaço de CPF está vazio.");
            return null;
        } 
        return cpf;
    }
    
    public boolean isHospedeCadastrado(String cpf) {
        if(hospedeRepository.getHospede(cpf) == null) {
            return false;
        }
        return true;
    }
    
    public Hospede leituraInputHospede() {
        String cpfHospede = inputCpfHospede.getText();
        if(inputCpfHospede.getText().contains(" ")) {
            JOptionPane.showInternalMessageDialog(null, "Espaço de CPF está vazio.");
            return null;
        }
        if(isHospedeCadastrado(cpfHospede)) {
            JOptionPane.showInternalMessageDialog(null, "CPF já cadastrado.");
            return null;
        }
        
        String nomeHospede = inputNomeHospede.getText();
        
        if(inputCelularHospede.getText().contains(" ")) {
            JOptionPane.showInternalMessageDialog(null, "Espaço de número celular está vazio.");
            return null;
        }
        String celularHospede = inputCelularHospede.getText();
        String emailHospede = inputEmailHospede.getText();
        String enderecoHospede = inputEnderecoHospede.getText();
        
        if(nomeHospede.length() == 0 || emailHospede.length() == 0 || enderecoHospede.length() == 0) {
            JOptionPane.showInternalMessageDialog(null, "Tem alguma campo vazio, não é posivel fazer essa ação.");
            return null;
        }
        
        return new Hospede(nomeHospede, cpfHospede, enderecoHospede, celularHospede, emailHospede);
    }
    
    public Hospede leituraInputHospedeUpdate() {
        String cpfHospede = inputCpfHospede.getText();
        if(inputCpfHospede.getText().contains(" ")) {
            JOptionPane.showInternalMessageDialog(null, "Espaço de CPF está vazio.");
            return null;
        }
        if(!isHospedeCadastrado(cpfHospede)) {
            JOptionPane.showInternalMessageDialog(null, "CPF não encontrado");
            return null;
        }
        Hospede hospede = hospedeRepository.getHospede(cpfHospede);
        
        String nomeHospede = inputNomeHospede.getText();
        
        if(inputCelularHospede.getText().contains(" ")) {
            JOptionPane.showInternalMessageDialog(null, "Espaço de número celular está vazio.");
            return null;
        }
        String celularHospede = inputCelularHospede.getText();
        String emailHospede = inputEmailHospede.getText();
        String enderecoHospede = inputEnderecoHospede.getText();
        
        if(nomeHospede.length() == 0 || emailHospede.length() == 0 || enderecoHospede.length() == 0) {
            JOptionPane.showInternalMessageDialog(null, "Tem alguma campo vazio, não é posivel fazer essa ação.");
            return null;
        }
        
        hospede.setCpf(cpfHospede);
        hospede.setNome(nomeHospede);
        hospede.setCelular(celularHospede);
        hospede.setEmail(emailHospede);
        hospede.setEndereco(enderecoHospede);
        
        
        
        return hospede;
    }
    
    public void inserirDadosHospede() {
        inputCpfHospede.setText(tabelaHospedes.getValueAt(tabelaHospedes.getSelectedRow(), 0).toString());
        inputNomeHospede.setText(tabelaHospedes.getValueAt(tabelaHospedes.getSelectedRow(), 1).toString());
        inputEnderecoHospede.setText(tabelaHospedes.getValueAt(tabelaHospedes.getSelectedRow(), 2).toString());
        inputCelularHospede.setText(tabelaHospedes.getValueAt(tabelaHospedes.getSelectedRow(), 3).toString());
        inputEmailHospede.setText(tabelaHospedes.getValueAt(tabelaHospedes.getSelectedRow(), 4).toString());
    }
    
    private void limparCamposHospede() {
        inputCpfHospede.setText("");
        inputNomeHospede.setText("");
        inputCelularHospede.setText("");
        inputEmailHospede.setText("");
        inputEnderecoHospede.setText("");
    }
    
    private void listarHospedes() {
        DefaultTableModel modelo = (DefaultTableModel) tabelaHospedes.getModel();
        modelo.setNumRows(0);
        for (Hospede hospede : hospedeRepository.consultarHospede()) {
            modelo.addRow(new Object[]{hospede.getCpf(), hospede.getNome(), hospede.getEndereco(), hospede.getCelular(), hospede.getEmail()});
        }
        
    }
    
    // Métodos para quarto
    public boolean quartoCadastrado(int codigo) {
        if(quartoRepository.getQuarto(codigo) != null) {
            return true;
        }
        return false;
    }
    
    // Métodos para alguel de quartos.
    public void limparCamposDadosAluguel() {
        inputCpfHospedeAluguel.setText("");
        inputCodigoQuarto.setText("");
        inputDataEntrada.setText("");
        inputDataSaida.setText("");
        checkPago.setSelected(false);
    }
    
    public void inserirDadosAluguel() {
        inputCpfHospedeAluguel.setText(tabelaAlugueis.getValueAt(tabelaAlugueis.getSelectedRow(), 2).toString());
        inputCodigoQuarto.setText(tabelaAlugueis.getValueAt(tabelaAlugueis.getSelectedRow(), 3).toString());
        LocalDateTime dataEntrada = LocalDateTime.parse(tabelaAlugueis.getValueAt(tabelaAlugueis.getSelectedRow(), 5).toString(), formatter) ;
        inputDataEntrada.setText(dataEntrada.format(formatterSemHora));
        LocalDateTime saidaEntrada = LocalDateTime.parse(tabelaAlugueis.getValueAt(tabelaAlugueis.getSelectedRow(), 6).toString(), formatter);
        inputDataSaida.setText(saidaEntrada.format(formatterSemHora));
        checkPago.setSelected((boolean) tabelaAlugueis.getValueAt(tabelaAlugueis.getSelectedRow(), 9));
    
    }
    
    public Aluguel leituraInputsAluguel() {
        String cpfHospede = inputCpfHospedeAluguel.getText();
        if(cpfHospede.contains(" ")) {
            JOptionPane.showInternalMessageDialog(null, "Espaço de CPF está vazio.");
            return null;
        }
        if(!isHospedeCadastrado(cpfHospede)) {
            JOptionPane.showInternalMessageDialog(null, "CPF não cadastrado.");
            txtRespostaHospede.setText("Hospede não encontrado.");
            return null;
        }
        txtRespostaHospede.setText("Hospede Encontrado.");
        Hospede hospede = hospedeRepository.getHospede(cpfHospede);
        
        int codigoQuarto = 0;
        try{
            codigoQuarto = Integer.parseInt(inputCodigoQuarto.getText());
        }catch(NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "O código do quarto tem que digito numerico.");
            return null;
        }
        if(quartoCadastrado(codigoQuarto)) {
            txtRespostaQuarto.setText("Quarto Encontrado.");
        } else {
            txtRespostaQuarto.setText("Quarto não encontrado.");
            JOptionPane.showMessageDialog(null, "Quarto não encontrado");
            return null;
        }
        Quarto quarto = quartoRepository.getQuarto(codigoQuarto);
        
        String dataEntrada = inputDataEntrada.getText();
        if(dataEntrada.contains(" ")) {
            JOptionPane.showInternalMessageDialog(null, "Espaço de data de entrada está vazio.");
            return null;
        }
        
        String dataSaida = inputDataSaida.getText();
        if(dataSaida.contains(" ")) {
            JOptionPane.showInternalMessageDialog(null, "Espaço de data de saída está vazio.");
            return null;
        }
        
        boolean isPago = checkPago.isSelected();
        
        
        return new Aluguel(hospede,quarto, dataEntrada, dataSaida, isPago);
    }
    
    public Aluguel leituraInputsAluguelUpdate(int codigoAluguel) {
        Aluguel aluguel = aluguelRepository.getAluguel(codigoAluguel);
        if(aluguel == null) {
            JOptionPane.showMessageDialog(null, "Aluguel não encontrado!");
            return null;
        }
        
        String cpfHospede = inputCpfHospedeAluguel.getText();
        if(cpfHospede.contains(" ")) {
            JOptionPane.showInternalMessageDialog(null, "Espaço de CPF está vazio.");
            return null;
        }
        if(!isHospedeCadastrado(cpfHospede)) {
            JOptionPane.showInternalMessageDialog(null, "CPF não cadastrado.");
            txtRespostaHospede.setText("Hospede não encontrado.");
            return null;
        }
        txtRespostaHospede.setText("Hospede Encontrado.");
        Hospede hospede = hospedeRepository.getHospede(cpfHospede);
        
        int codigoQuarto = 0;
        try{
            codigoQuarto = Integer.parseInt(inputCodigoQuarto.getText());
        }catch(NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "O código do quarto tem que digito numerico.");
            return null;
        }
        if(quartoCadastrado(codigoQuarto)) {
            txtRespostaQuarto.setText("Quarto Encontrado.");
        } else {
            txtRespostaQuarto.setText("Quarto não encontrado.");
            JOptionPane.showMessageDialog(null, "Quarto não encontrado");
            return null;
        }
        Quarto quarto = quartoRepository.getQuarto(codigoQuarto);
        
        String dataEntrada = inputDataEntrada.getText();
        if(dataEntrada.contains(" ")) {
            JOptionPane.showInternalMessageDialog(null, "Espaço de data de entrada está vazio.");
            return null;
        }
        
        String dataSaida = inputDataSaida.getText();
        if(dataSaida.contains(" ")) {
            JOptionPane.showInternalMessageDialog(null, "Espaço de data de saída está vazio.");
            return null;
        }
        
        boolean isPago = checkPago.isSelected();
        
        aluguel.setHospede(hospede);
        aluguel.setQuarto(quarto);
        aluguel.setDataHoraEntrada(dataEntrada);
        aluguel.setDataHoraSaida(dataSaida);
        aluguel.setPago(isPago);
        
        return aluguel;
    }
    
    public void finalizarAluguel(int codigoAluguel) {
        Aluguel aluguel = aluguelRepository.getAluguel(codigoAluguel);
        if(aluguel != null) {
            if(aluguelRepository.finalizarAluguel(aluguel)) {
                JOptionPane.showMessageDialog(null, "Aluguel finalizado com sucesso!");
            } else {
                JOptionPane.showMessageDialog(null, "Houve alguam problema ao finalizar o aluguel, pode ser falta de pagamento.");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Aluguel não encontrado");
        }
        
    }
    
    public void listarAlugueis() {
        DefaultTableModel tabela = (DefaultTableModel) tabelaAlugueis.getModel();
        tabela.setNumRows(0);
        for (Aluguel aluguel : aluguelRepository.getAll()) {
            String endereco = quartoRepository.enderecoQuarto(aluguel.getQuarto().getCod());
            tabela.addRow(new Object[]{
                aluguel.getCod(),
                aluguel.getHospede().getNome(),
                aluguel.getHospede().getCpf(),
                aluguel.getQuarto().getCod(),
                endereco,
                aluguel.getDataHoraEntrada().format(formatter),
                aluguel.getDataHoraSaida().format(formatter),
                aluguel.quantidadeDiaria(),
                aluguel.valorTotal(),
                aluguel.getPago(),
                aluguel.getFinalizado()
            });
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Home().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel AlugueisPage;
    private javax.swing.JButton AtualizarDadosHospedes;
    private javax.swing.JButton CadastrarHospede;
    private javax.swing.JButton ExcluirAluguel;
    private javax.swing.JButton ExcluirHospede;
    private javax.swing.JPanel HomePage;
    private javax.swing.JPanel HospedesPage;
    private javax.swing.JButton LimparCamposHospede;
    private javax.swing.JPanel Main;
    private javax.swing.JPanel ResidenciasPage;
    private javax.swing.JLabel TitleHospedes;
    private javax.swing.JButton btnAlugar;
    private javax.swing.JPanel btnAlugueis;
    private javax.swing.JButton btnAtualizarAluguel;
    private javax.swing.JButton btnBuscarCliente;
    private javax.swing.JButton btnBuscarHospede;
    private javax.swing.JButton btnDesselecionarAluguel;
    private javax.swing.JButton btnDesselecionarHospede;
    private javax.swing.JButton btnDesselecionarQuarto;
    private javax.swing.JButton btnDesselecionarResidendia;
    private javax.swing.JButton btnFinalizarAluguel;
    private javax.swing.JButton btnGerenciamentoResidencia;
    private javax.swing.JPanel btnHome;
    private javax.swing.JPanel btnHospedes;
    private javax.swing.JButton btnLimparCamposAluguel;
    private javax.swing.JButton btnQuarto;
    private javax.swing.JPanel btnResidencias;
    private javax.swing.JButton btnSelecionarQuarto;
    private javax.swing.JCheckBox checkPago;
    private javax.swing.JFormattedTextField inputCelularHospede;
    private javax.swing.JTextField inputCodigoQuarto;
    private javax.swing.JFormattedTextField inputCpfHospede;
    private javax.swing.JFormattedTextField inputCpfHospedeAluguel;
    private javax.swing.JFormattedTextField inputCpfHospedeBusca;
    private javax.swing.JFormattedTextField inputDataEntrada;
    private javax.swing.JFormattedTextField inputDataSaida;
    private javax.swing.JTextField inputEmailHospede;
    private javax.swing.JTextField inputEnderecoHospede;
    private javax.swing.JTextField inputNomeHospede;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JButton resetarBuscaHospede;
    private javax.swing.JPanel sidebar;
    private javax.swing.JTable tabelaAlugueis;
    private javax.swing.JTable tabelaHospedes;
    private javax.swing.JTable tabelaQuartosDiponiveis;
    private javax.swing.JTable tabelaQuartosResidencia;
    private javax.swing.JTable tabelaResidencias;
    private javax.swing.JLabel txtRespostaHospede;
    private javax.swing.JLabel txtRespostaQuarto;
    // End of variables declaration//GEN-END:variables
}
